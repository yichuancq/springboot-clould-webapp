server:
  port: 8083


spring:
  boot:
    admin:
      client:
        url: http://192.168.0.100:8090    # server地址，
        username: admin    #对应server端的账号密码，不配置就监控不到这个client。
        password: admin
        instance:
          service-base-url: http://192.168.0.100:8083    #client 地址
  application:
    # 用于指定这个微服务名称，也就是在注册中心显示的名称，其他微服务同个这个名称调用服务
    name: my-shop-client

  cloud:
    loadbalancer:
      retry:
        enabled: true #开启Spring Cloud的重试功能
#admin监控所有端点
management:
  endpoints:
    web:
      exposure:
        include: '*' #监控所有端点，其中health和status是必须监控的
        exclude: configprops	#排除对配置信息的监控，每次浏览这个节点的时候，
          #数据库的链接就一直释放不掉，最后导致超时，因为配置信息的监控也不重要，
        #就不再监控这个节点，以下为可监控的endpoint。可以根据需要有选择的进行监控。
        #- health,status,env,metrics,dump,jolokia,info,
        #configprops,trace,logfile,refresh,flyway,
        #liquibase,heapdump,loggers,auditevents,hystrix.stream,activiti
# info信息会显示到SBA的server端，这里取的是maven中的数据
info:
  version: @project.version@
  groupId: @project.groupId@
  artifactId: @project.artifactId@

service:
  ribbon: #负载均衡规则的配置
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule  #规则:随机.默认.轮循
    ConnectTimeout: 250 # Ribbon的连接超时时间
    ReadTimeout: 1000 # Ribbon的数据读取超时时间
    OkToRetryOnAllOperations: true # 是否对所有操作都进行重试
    MaxAutoRetriesNextServer: 1 # 切换实例的重试次数
    MaxAutoRetries: 1 # 对当前实例的重试次数




feign:
  hystrix:
    enabled: true # 开启Feign的熔断功能

    #turbine:
    #  app-config: my-shop-client,my-member-client
    #    cluster-name-expression: new String("default")
    # aggregator:
    # clusterConfig: default
turbine:
  app-config: my-shop-client,my-member-client,my-logistics-client
  aggregator:
    clusterConfig: default
  clusterNameExpression: new String("default")
  combine-host: true
  instanceUrlSuffix:
    default: actuator/hystrix.stream

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMillisecond: 6000 # 设置hystrix的超时时间为6000ms

eureka:
  instance:
    appname: yichuan-shop-clinet # name
    prefer-ip-address: true # ip show

  client: #客户端注册进eureka服务列表内
    healthcheck:
      enabled: true
    instance:
      #      lease-expiration-duration-in-seconds: 30
      #      lease-renewal-interval-in-seconds: 10
      lease-renewal-interval-in-second: 5      #每隔5s心跳一次,证明本服务还活着
      lease-expiration-duration-in-second: 10 #本服务10s内没有心跳,就将该服务从服务端剔除
    service-url:
      defaultZone: http://192.168.0.100:8081/eureka #这个地址就是在 Eureka 服务端的 application.yml 上暴露出的服务地址（这行后面加注释，可能会报错）

